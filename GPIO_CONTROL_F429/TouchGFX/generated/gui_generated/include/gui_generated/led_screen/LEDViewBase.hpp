/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef LEDVIEWBASE_HPP
#define LEDVIEWBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/led_screen/LEDPresenter.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/Slider.hpp>

class LEDViewBase : public touchgfx::View<LEDPresenter>
{
public:
    LEDViewBase();
    virtual ~LEDViewBase() {}
    virtual void setupScreen();

    /*
     * Virtual Action Handlers
     */
    virtual void Toggle()
    {
        // Override and implement this function in LED
    }

    virtual void Slider_Moved(int value)
    {
        // Override and implement this function in LED
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box __background;
    touchgfx::Image BackGround;
    touchgfx::ToggleButton ToggleButton;
    touchgfx::TextArea Toggle_Text;
    touchgfx::Slider Toggle_Frequency;
    touchgfx::TextArea Toggle_Frequency_Text;

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<LEDViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<LEDViewBase, const touchgfx::Slider&, int> sliderValueChangedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);

};

#endif // LEDVIEWBASE_HPP
